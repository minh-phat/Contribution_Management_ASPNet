﻿@using Microsoft.AspNetCore.Identity
@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager
@model SchoolProject1640.Models.ModelOfView.AdminDashboard
@{
}
@if (User.IsInRole("Administrator"))
{
    <div class="px-16 py-8 w-full h-[900px] flex text-black sm:px-1">

        <div class="w-full h-full bg-[#EBDFD7] py-5 px-3 ">

            <div class="w-full h-[90%] space-y-10 ">
                <div class="px-5 py-5 w-full h-[200px] grid grid-cols-4 text-black lg:grid-cols-2 lg:h-[400px] gap-4 ">
                    <div class="w-full h-full bg-[#F2EAE5] flex flex-col space-y-1 px-3 py-3 rounded-xl">
                        <div class="bg-[#F995A7] rounded-full w-14 h-14 flex items-center justify-center">
                            <Icon class="w-10 h-10" name="mdi:file-outline" />
                        </div>

                        <div class="text-[#797979] font-medium text-[18px]">
                            Total articles
                        </div>
                        <div id="totalArticles" class="text-[40px] font-bold">@Model.TotalArticle</div>
                    </div>
                    <div class="w-full h-full bg-[#F2EAE5] flex flex-col space-y-1 px-3 py-3 rounded-xl">
                        <div class="bg-[#7CC2F2] rounded-full w-14 h-14 flex items-center justify-center">
                            <Icon class="w-10 h-10" name="ph:bag-bold" />
                        </div>
                        <div class="text-[#797979] font-medium text-[18px]">
                            Total Facuties
                        </div>
                        <div id="totalFaculties" class="text-[40px] font-bold">@Model.TotalFaculty</div>
                    </div>
                    <div class="w-full h-full bg-[#F2EAE5] flex flex-col space-y-1 px-3 py-3 rounded-xl">
                        <div class="bg-[#F8D88D] rounded-full w-14 h-14 flex items-center justify-center">
                            <Icon class="w-10 h-10" name="icon-park-outline:peoples" />
                        </div>
                        <div class="text-[#797979] font-medium text-[18px]">
                            Total Student
                        </div>
                        <div id="totalStudents" class="text-[40px] font-bold">@Model.TotalStudent</div>
                    </div>
                    <div class="w-full h-full bg-[#F2EAE5] flex flex-col space-y-1 px-3 py-3 rounded-xl">
                        <div class="bg-[#8BDCDA] rounded-full w-14 h-14 flex items-center justify-center">
                            <Icon class="w-10 h-10" name="icon-park-outline:peoples" />
                        </div>
                        <div class="text-[#797979] font-medium text-[18px]">
                            Total Contribution
                        </div>
                        <div id="totalContributions" class="text-[40px] font-bold">@Model.TotalContribution</div>
                    </div>
                </div>
                <div class="px-5 w-full  flex space-x-5 lg:flex-col lg:space-y-5 lg:space-x-0">
                    <div class="bg-[#F2EAE5] w-[49%] h-[500px] p-5 rounded-xl space-y-4 text-center lg:w-[100%] ">
                        <div class="font-bold text-[20px] text-center">
                            Bảng Xếp Hạng Bé Khỏe Bé Ngoan
                        </div>
                        <table class="w-full">
                            <thead>
                                <tr class="w-full">
                                    <th class="w-[10%] text-center">Top</th>
                                    <th class="w-[35%] text-center">Name Author</th>
                                    <th class="w-[35%] text-center">Email</th>
                                    <th class="w-[20%] text-center">Article Count</th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var (index, (userId, articleCount)) in Model.UserPostArticleCount.Select((pair, index) => (index + 1, pair)))
                                {
                                    <tr>
                                        <td class="top-column">@index</td>
                                        <td>@UserManager.FindByIdAsync(userId).Result.LastName</td>
                                        <td>@UserManager.FindByIdAsync(userId).Result.Email</td>
                                        <td>@articleCount</td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    
                        <div class="bg-[#F2EAE5] w-[49%] h-[500px] p-5 rounded-xl space-y-4 text-center lg:w-[100%]">
                            <div class="font-bold text-[20px] text-center">
                                Chart
                            </div>
                            <div>
                                <canvas id="myPieChart" width="400" height="400"></canvas>
                            </div>
                        </div>
                    
                </div>
            </div>
        </div>
    </div>


}
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        // Extracting data from HTML elements
        var totalArticles = parseInt(document.getElementById('totalArticles').textContent);
        var totalFaculties = parseInt(document.getElementById('totalFaculties').textContent);
        var totalStudents = parseInt(document.getElementById('totalStudents').textContent);
        var totalContributions = parseInt(document.getElementById('totalContributions').textContent);

        // Prepare data for the chart
        var data = {
            labels: ["Total Articles", "Total Faculties", "Total Students", "Total Contributions"],
            datasets: [{
                data: [totalArticles, totalFaculties, totalStudents, totalContributions],
                backgroundColor: [
                    'rgba(255, 99, 132, 0.5)',
                    'rgba(54, 162, 235, 0.5)',
                    'rgba(255, 206, 86, 0.5)',
                    'rgba(75, 192, 192, 0.5)'
                ],
                borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(75, 192, 192, 1)'
                ],
                borderWidth: 1
            }]
        };

        // Options for the chart
        var options = {
            responsive: true,
            maintainAspectRatio: false
        };

        // Get the context of the canvas element
        var ctx = document.getElementById('myPieChart').getContext('2d');

        // Create the pie chart
        var myPieChart = new Chart(ctx, {
            type: 'pie',
            data: data,
            options: options
        });
    });
</script>